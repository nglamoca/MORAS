CHIP MultHalf {
  IN a[16], b[16];
  OUT out[16];
  

//A = 0 10011 0011110111
//B = 1 00011 0010011000

//mult:
//add the exponents, to get the output exponent
//multiply the two mantissas 

//So the new exponent is E=(19−15)+(3−15)=−8
// 15 bin. -> 1111  
// exp [10..14]

//mult mantissa [0..9]
//1.00111101112×=1.00100110002=1.01101100111010101
// M=0110110011

// 0 1 -> - / +

// Out=1 00111 0110110011


  PARTS:
    
    Add16(a[10..14] = a[10..14], b[10..14] = b[10..14], a[0..9]=false, a[15]=false, b[0..9]=false, b[15]=false, out=out1); // exp 10..14 add
    Add16(a=out1, b[0..9]=false, b[10]=true, b[11..13]=false, b[14]=true, b[15]=false, out[10..14]=out[10..14], out[15]=out2, out[0..9]=out3);
    
    Mult(a[0..9] = a[0..9], b[0..9] = b[0..9], a[10..15] = false, b[10..15] = false, out[6..15] = out[0..9], out[0..5]=out4); //mult mantissa 0..9
    
    Xor(a=a[15], b=b[15], out=out[15]); //!(a==b) 


   
}